# log4php.properties: log4php用設定ファイル
# 参考: http://logging.apache.org/log4php/docs/configuration.html


# === アペンダ(appenders)定義
# log4php.appender.{appender_name}
# 参考: http://logging.apache.org/log4php/docs/appenders.html
#       http://logging.apache.org/log4php/docs/layouts/pattern.html

# --- 出力無し設定
log4php.appender.dev_null = LoggerAppenderNull

# --- 画面出力設定
log4php.appender.stdout = LoggerAppenderEcho
log4php.appender.stdout.layout = LoggerLayoutPattern
log4php.appender.stdout.layout.conversionPattern = "%date{Y-m-d H:i:s.u} %-14logger %-8level [%-15X{ADDR} %X{HOST}] %message%newline"

# --- ファイル出力設定(一定サイズでログを切替)
#   http://logging.apache.org/log4php/docs/appenders/rolling-file.html
log4php.appender.file = LoggerAppenderRollingFile
# ■ log4php.appender.{name}.file は絶対パスで指定する必要あり
#  参考： http://stackoverflow.com/questions/15666893/log4php-file-size-error
log4php.appender.file.file = /Users/tueda/blanco/log/api.log
log4php.appender.file.append = true
log4php.appender.file.maxFileSize = 5MB
log4php.appender.file.maxBackupIndex = 5
log4php.appender.file.compress = false
log4php.appender.file.layout = LoggerLayoutPattern
log4php.appender.file.layout.conversionPattern = "%date{Y-m-d H:i:s.u} %message [%level](%-15X{ADDR} %X{HOST})%newline"


# === ロガー(logger)定義
# 参考: http://logging.apache.org/log4php/docs/loggers.html

# --- root ロガー
# log4php.rootLogger = {log_level}, {appender_name}[, {appender_name} ...]
# ※ rootLogger は、全ての Logger::getLogger({logger_name}) の継承元となる
#   {log_level} → http://logging.apache.org/log4php/docs/introduction.html
#   {appender_name) → アペンダ定義で指定した名称(log4php.appender.{appender_name})
#   <?php $root_logger = Logger::getRootLogger(); // RootLogger 取得 ?>
log4php.rootLogger = FATAL, dev_null


# --- 名前付きロガー
# log4php.logger.{logger_name} = {log_level}, {appender_name}[, {appender_name} ...]
# ※ 設定名({logger_name}) をLogger::getLogger({logger_name})で指定すると、log4php.rootLogger の継承＋指定した設定のログとなる
# ※ 本設定ファイル内で定義されていない{logger_name}を指定すると、root ロガーと等価になる
#   {logger_name} → Logger::getLogger({logger_name})で指定すると、log4php.rootLogger の継承＋指定したアペンダのロガーが取得される
#   <?php $sample_logger = Logger::getLogger('sample'); // 名前を指定して Logger 取得 ?>
log4php.logger.DefaultLogger = TRACE, file
# log4php.logger.DebugLogger = DEBUG, stdout, file
